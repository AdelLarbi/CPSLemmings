--------------------------------------------------------------------------------
-  Service : Level
-  Total tests : 104
-          |_ positifs : 50
-          |_ negatifs : 54
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
[Test 1]: Init
--------------------------------------------------------------------------------
[Test 1.1]: testInit1 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(5,10)
Oracle : 	
	height(L) == 10
	width(L) == 5
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L,x,y) == (Nature.METAL FORALL (x,y) / 
				     (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) ||
				     (x=width()-1 && 0 <=y<height()) || (y=height()-1 && 0<=x<width())
			      && (Nature.EMPTY FORALL (x,y) / 
				     (x!=0 && 0<y<height()-1) || (y!=0 && 0<x<width()-1) || 
				     (x!=width()-1 && 0<y<height()-1) || (y!=height()-1 && 0<x<width()-1))
--------------------------------------------------------------------------------
[Test 1.2]: testInit2 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(10,5)
Oracle : 	
	height(L) == 5
	width(L) == 10
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L,x,y) == (Nature.METAL FORALL (x,y) / 
				     (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) ||
				     (x=width()-1 && 0 <=y<height()) || (y=height()-1 && 0<=x<width())
			      && (Nature.EMPTY FORALL (x,y) / 
				     (x!=0 && 0<y<height()-1) || (y!=0 && 0<x<width()-1) || 
				     (x!=width()-1 && 0<y<height()-1) || (y!=height()-1 && 0<x<width()-1))
--------------------------------------------------------------------------------
[Test 1.3]: testInit3 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(999,999)
Oracle : 	
	height(L) == 999
	width(L) == 999
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L,x,y) == (Nature.METAL FORALL (x,y) / 
				     (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) ||
				     (x=width()-1 && 0 <=y<height()) || (y=height()-1 && 0<=x<width())
			      && (Nature.EMPTY FORALL (x,y) / 
				     (x!=0 && 0<y<height()-1) || (y!=0 && 0<x<width()-1) || 
				     (x!=width()-1 && 0<y<height()-1) || (y!=height()-1 && 0<x<width()-1))
--------------------------------------------------------------------------------
[Test 1.4]: testInit4 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(100,80)
Oracle : 	
	height(L) == 80
	width(L) == 100
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L,x,y) == (Nature.METAL FORALL (x,y) / 
				     (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) ||
				     (x=width()-1 && 0 <=y<height()) || (y=height()-1 && 0<=x<width())
			      && (Nature.EMPTY FORALL (x,y) / 
				     (x!=0 && 0<y<height()-1) || (y!=0 && 0<x<width()-1) || 
				     (x!=width()-1 && 0<y<height()-1) || (y!=height()-1 && 0<x<width()-1))
--------------------------------------------------------------------------------
[Test 1.5]: testInit5 | Negatif

Conditions initiales :
	aucunes
Opérations : 
	L = init(-1,80)
Oracle : 	
	Exception {
		javaError : NegativeArraySizeException
	}
--------------------------------------------------------------------------------
[Test 1.6]: testInit6 | Negatif

Conditions initiales :
	aucunes
Opérations : 
	L = init(20,-3)
Oracle : 	
	Exception {
		javaError : NegativeArraySizeException
	}
--------------------------------------------------------------------------------
[Test 1.7]: testInit7 | Negatif

Conditions initiales :
	aucunes
Opérations : 
	L = init(1,49)
Oracle : 	
	Exception {
		init : x <= 4
	}
--------------------------------------------------------------------------------
[Test 1.8]: testInit8 | Negatif

Conditions initiales :
	aucunes
Opérations : 
	L = init(14,2)
Oracle : 	
	Exception {
		init : y <= 4
	}
--------------------------------------------------------------------------------
[Test 2]: setNature
--------------------------------------------------------------------------------
[Test 2.1]: testSetNature1 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 0, 0, Nature.DIRT)
Oracle : 
	nature(L,0,0) = Nature.DIRT
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.2]: testSetNature2 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 0, 0, Nature.METAL)
Oracle : 
	nature(L,0,0) = Nature.METAL
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.3]: testSetNature3 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 0, 0, Nature.EMPTY)
Oracle : 
	nature(L,0,0) = Nature.EMPTY
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.4]: testSetNature4 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 99, 78, Nature.DIRT)
Oracle : 
	nature(L,99,78) = Nature.DIRT
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)
--------------------------------------------------------------------------------
[Test 2.5]: testSetNature5 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 99, 78, Nature.METAL)
Oracle : 
	nature(L,99,78) = Nature.METAL
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.6]: testSetNature6 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 99, 78, Nature.EMPTY)
Oracle : 
	nature(L,99,78) = Nature.EMPTY
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.7]: testSetNature7 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 50, Nature.DIRT)
Oracle : 
	nature(L,50,50) = Nature.DIRT
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.8]: testSetNature8 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 50, Nature.METAL)
Oracle : 
	nature(L,50,50) = Nature.METAL
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.9]: testSetNature9 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 50, Nature.EMPTY)
Oracle : 
	nature(L,50,50) = Nature.EMPTY
	isEditing(L) == isEditing(L)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 2.10]: testSetNature10 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, -1, 50, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : x < 0
	}
--------------------------------------------------------------------------------
[Test 2.11]: testSetNature11 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, -1, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : y < 0
	}
--------------------------------------------------------------------------------
[Test 2.12]: testSetNature12 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, -99, 50, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : x < 0
	}
--------------------------------------------------------------------------------
[Test 2.13]: testSetNature13 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, -99, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : y < 0
	}
--------------------------------------------------------------------------------
[Test 2.14]: testSetNature14 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 100, 50, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : x >= getWidth()
	}
--------------------------------------------------------------------------------
[Test 2.15]: testSetNature15 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 80, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : y >= getHeight()
	}
--------------------------------------------------------------------------------
[Test 2.16]: testSetNature16 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 999, 50, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : x >= getWidth()
	}
--------------------------------------------------------------------------------
[Test 2.17]: testSetNature17 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 999, Nature.DIRT)
Oracle : 	
	Exception {
		setNature : y >= getHeight()
	}
--------------------------------------------------------------------------------
[Test 2.18]: testSetNature18 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, -1, 50, Nature.METAL)
Oracle : 	
	Exception {
		setNature : x < 0
	}
--------------------------------------------------------------------------------
[Test 2.19]: testSetNature19 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, -1, Nature.METAL)
Oracle : 	
	Exception {
		setNature : y < 0
	}
--------------------------------------------------------------------------------
[Test 2.20]: testSetNature20 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, -99, 50, Nature.METAL)
Oracle : 	
	Exception {
		setNature : x < 0
	}
--------------------------------------------------------------------------------
[Test 2.21]: testSetNature21 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, -99, Nature.METAL)
Oracle : 	
	Exception {
		setNature : y < 0
	}
--------------------------------------------------------------------------------
[Test 2.22]: testSetNature22 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 100, 50, Nature.METAL)
Oracle : 	
	Exception {
		setNature : x >= getWidth()
	}
--------------------------------------------------------------------------------
[Test 2.23]: testSetNature23 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 80, Nature.METAL)
Oracle : 	
	Exception {
		setNature : y >= getHeight()
	}
--------------------------------------------------------------------------------
[Test 2.24]: testSetNature24 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 999, 50, Nature.METAL)
Oracle : 	
	Exception {
		setNature : x >= getWidth()
	}
--------------------------------------------------------------------------------
[Test 2.25]: testSetNature25 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L, 50, 999, Nature.METAL)
Oracle : 	
	Exception {
		setNature : y >= getHeight()
	}
--------------------------------------------------------------------------------
[Test 3]: goPlay
--------------------------------------------------------------------------------
[Test 3.1]: testGoPlay1 | Positif

Conditions initiales :
	L = init(100,80)
Opérations :

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,1,41,Nature.EMPTY)
	setNature(L,1,42,Nature.EMPTY)
	setNature(L,1,43,Nature.EMPTY)
	
	setNature(L,78,54,Nature.EMPTY)
	setNature(L,78,55,Nature.EMPTY)
	setNature(L,78,56,Nature.METAL)
	
	goPlay(L, 1, 42, 78, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 1
	yEntrance(L) == 42
	xExit(L) == 78
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.2]: testGoPlay2 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,30,1,Nature.EMPTY)
	setNature(L,30,2,Nature.EMPTY)
	setNature(L,30,3,Nature.EMPTY)
	
	setNature(L,78,54,Nature.EMPTY)
	setNature(L,78,55,Nature.EMPTY)
	setNature(L,78,56,Nature.METAL)

	goPlay(L, 30, 2, 78, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 30
	yEntrance(L) == 2
	xExit(L) == 78
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.3]: testGoPlay3 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,30,40,Nature.EMPTY)
	setNature(L,30,41,Nature.EMPTY)
	setNature(L,30,42,Nature.EMPTY)
	
	setNature(L,2,54,Nature.EMPTY)
	setNature(L,2,55,Nature.EMPTY)
	setNature(L,2,56,Nature.METAL)

	goPlay(L, 30, 41, 2, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 30
	yEntrance(L) == 41
	xExit(L) == 2
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.4]: testGoPlay4 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,30,40,Nature.EMPTY)
	setNature(L,30,41,Nature.EMPTY)
	setNature(L,30,42,Nature.EMPTY)

	setNature(L,70,1,Nature.EMPTY)
	setNature(L,70,2,Nature.EMPTY)
	setNature(L,70,3,Nature.METAL)
	
	goPlay(L, 30, 41, 70, 2)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 30
	yEntrance(L) == 41
	xExit(L) == 70
	yExit(L) == 2
--------------------------------------------------------------------------------
[Test 3.5]: testGoPlay5 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,98,41,Nature.EMPTY)
	setNature(L,98,42,Nature.EMPTY)
	setNature(L,98,43,Nature.EMPTY)
	
	setNature(L,78,54,Nature.EMPTY)
	setNature(L,78,55,Nature.EMPTY)
	setNature(L,78,56,Nature.METAL)
	
	goPlay(L, 98, 42, 78, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 98
	yEntrance(L) == 42
	xExit(L) == 78
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.6]: testGoPlay6 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,30,76,Nature.EMPTY)
	setNature(L,30,77,Nature.EMPTY)
	setNature(L,30,78,Nature.EMPTY)
	
	setNature(L,79,54,Nature.EMPTY)
	setNature(L,79,55,Nature.EMPTY)
	setNature(L,79,56,Nature.METAL)
	
	goPlay(L, 30, 77, 79, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 30
	yEntrance(L) == 77
	xExit(L) == 79
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.7]: testGoPlay7 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,30,40,Nature.EMPTY)
	setNature(L,30,41,Nature.EMPTY)
	setNature(L,30,42,Nature.EMPTY)
	
	setNature(L,98,54,Nature.EMPTY)
	setNature(L,98,55,Nature.EMPTY)
	setNature(L,98,56,Nature.METAL)
	
	goPlay(L, 30, 41, 98, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 30
	yEntrance(L) == 41
	xExit(L) == 98
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.8]: testGoPlay8 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,30,40,Nature.EMPTY)
	setNature(L,30,41,Nature.EMPTY)
	setNature(L,30,42,Nature.EMPTY)
	
	setNature(L,70,76,Nature.EMPTY)
	setNature(L,70,77,Nature.EMPTY)
	setNature(L,70,78,Nature.METAL)
	
	goPlay(L, 30, 41, 70, 77)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 30
	yEntrance(L) == 41
	xExit(L) == 70
	yExit(L) == 77
--------------------------------------------------------------------------------
[Test 3.9]: testGoPlay9 | Positif

Conditions initiales :	
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,90,54,Nature.EMPTY)
	setNature(L,90,55,Nature.EMPTY)
	setNature(L,90,56,Nature.EMPTY)
	
	setNature(L,20,25,Nature.EMPTY)
	setNature(L,20,26,Nature.EMPTY)
	setNature(L,20,27,Nature.METAL)
	
	goPlay(L, 90, 55, 20, 26)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 90
	yEntrance(L) == 55
	xExit(L) == 20
	yExit(L) == 26
--------------------------------------------------------------------------------
[Test 3.10]: testGoPlay10 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,90,54,Nature.EMPTY)
	setNature(L,90,55,Nature.EMPTY)
	setNature(L,90,56,Nature.EMPTY)
	
	setNature(L,90,25,Nature.EMPTY)
	setNature(L,90,26,Nature.EMPTY)
	setNature(L,90,27,Nature.METAL)
	
	goPlay(L, 90, 55, 90, 26)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 90
	yEntrance(L) == 55
	xExit(L) == 90
	yExit(L) == 26
--------------------------------------------------------------------------------
[Test 3.11]: testGoPlay11 | Positif

Conditions initiales :	
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,90,54,Nature.EMPTY)
	setNature(L,90,55,Nature.EMPTY)
	setNature(L,90,56,Nature.EMPTY)
	
	setNature(L,20,54,Nature.EMPTY)
	setNature(L,20,55,Nature.EMPTY)
	setNature(L,20,56,Nature.METAL)
	
	goPlay(L, 90, 55, 20, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 90
	yEntrance(L) == 55
	xExit(L) == 20
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.12]: testGoPlay12 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,55,63,Nature.EMPTY)
	setNature(L,55,64,Nature.EMPTY)
	setNature(L,55,65,Nature.EMPTY)
	
	setNature(L,64,63,Nature.EMPTY)
	setNature(L,64,64,Nature.EMPTY)
	setNature(L,64,65,Nature.METAL)
	
	goPlay(L, 55, 64, 64, 64)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 55
	yEntrance(L) == 64
	xExit(L) == 64
	yExit(L) == 64
--------------------------------------------------------------------------------
[Test 3.13]: testGoPlay13 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	setNature(L,64,54,Nature.EMPTY)
	setNature(L,64,55,Nature.EMPTY)
	setNature(L,64,56,Nature.EMPTY)
	
	setNature(L,64,63,Nature.EMPTY)
	setNature(L,64,64,Nature.EMPTY)
	setNature(L,64,65,Nature.METAL)
	
	goPlay(L, 64, 55, 64, 64)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 64
	yEntrance(L) == 55
	xExit(L) == 64
	yExit(L) == 64
--------------------------------------------------------------------------------
[Test 3.14]: testGoPlay14 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,64,63,Nature.EMPTY)
	setNature(L,64,64,Nature.EMPTY)
	setNature(L,64,65,Nature.EMPTY)
	
	setNature(L,55,63,Nature.EMPTY)
	setNature(L,55,64,Nature.EMPTY)
	setNature(L,55,65,Nature.METAL)
	
	goPlay(L, 64, 64, 55, 64)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 64
	yEntrance(L) == 64
	xExit(L) == 55
	yExit(L) == 64
--------------------------------------------------------------------------------
[Test 3.15]: testGoPlay15 | Positif

Conditions initiales :
	L = init(100,80)
Opérations :

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,64,63,Nature.EMPTY)
	setNature(L,64,64,Nature.EMPTY)
	setNature(L,64,65,Nature.EMPTY)
	
	setNature(L,64,54,Nature.EMPTY)
	setNature(L,64,55,Nature.EMPTY)
	setNature(L,64,56,Nature.METAL)
	 
	goPlay(L, 64, 64, 64, 55)
Oracle : 
	isEditing(L) == false
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == 64
	yEntrance(L) == 64
	xExit(L) == 64
	yExit(L) == 55
--------------------------------------------------------------------------------
[Test 3.16]: testGoPlay16 | Negatif

Conditions initiales :	
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.DIRT))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(x,y) != Nature.METAL
	}
--------------------------------------------------------------------------------
[Test 3.17]: testGoPlay17 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : isEditing() != true
	}
--------------------------------------------------------------------------------
[Test 3.18]: testGoPlay18 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 

	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 0, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : xEntrance <= 0
	}
--------------------------------------------------------------------------------
[Test 3.19]: testGoPlay19 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 99, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : xEntrance >= getWidth()-1
	}
--------------------------------------------------------------------------------
[Test 3.20]: testGoPlay20 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 0, 91, 77)
Oracle : 	
	Exception {
		goPlay : yEntrance <= 0
	}
--------------------------------------------------------------------------------
[Test 3.21]: testGoPlay21 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 79, 91, 77)
Oracle : 	
	Exception {
		goPlay : yEntrance >= getHeight()-1
	}
--------------------------------------------------------------------------------
[Test 3.22]: testGoPlay22 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 0, 77)
Oracle : 	
	Exception {
		goPlay : xExit <= 0
	}
--------------------------------------------------------------------------------
[Test 3.23]: testGoPlay23 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 79, 91, 77)
Oracle : 	
	Exception {
		goPlay : xExit >= getWidth()-1
	}
--------------------------------------------------------------------------------
[Test 3.24]: testGoPlay24 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 0)
Oracle : 	
	Exception {
		goPlay : yExit <= 0
	}
--------------------------------------------------------------------------------
[Test 3.25]: testGoPlay25 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 79)
Oracle : 	
	Exception {
		goPlay : yExit >= getHeight()-1
	}
--------------------------------------------------------------------------------
[Test 3.26]: testGoPlay26 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 8, 11)
Oracle : 	
	Exception {
		goPlay : xEntrance == xExit && yEntrance == yExit
	}
--------------------------------------------------------------------------------
[Test 3.27]: testGoPlay27 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.DIRT)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(xEntrance,yEntrance-1) != Nature.EMPTY
	}
--------------------------------------------------------------------------------
[Test 3.28]: testGoPlay28 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.DIRT)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(xEntrance,yEntrance) != Nature.EMPTY
	}
--------------------------------------------------------------------------------
[Test 3.29]: testGoPlay29 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.DIRT)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(xEntrance,yEntrance+1) != Nature.EMPTY
	}
--------------------------------------------------------------------------------
[Test 3.30]: testGoPlay30 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.DIRT)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(xExit,yExit-1) != Nature.EMPTY
	}
--------------------------------------------------------------------------------
[Test 3.31]: testGoPlay31 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.DIRT)
	setNature(L,91,78,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(xExit,yExit) != Nature.EMPTY
	}
--------------------------------------------------------------------------------
[Test 3.32]: testGoPlay32 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	
	goEditing(L)
	
	(FORALL (x,y) / (x=0 && 0<=y<height()) || (y=0 && 0<=x<width()) 
	|| (x=width()-1 && 0<=y<height()) || (y=height()-1 && 0<=x<width()) 
	setNature(L,x,y,Nature.METAL))
	
	setNature(L,8,10,Nature.EMPTY)
	setNature(L,8,11,Nature.EMPTY)
	setNature(L,8,12,Nature.EMPTY)
	
	setNature(L,91,76,Nature.EMPTY)
	setNature(L,91,77,Nature.EMPTY)
	setNature(L,91,78,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 77)
Oracle : 	
	Exception {
		goPlay : getNature(xExit,yExit+1) != Nature.METAL
	}
--------------------------------------------------------------------------------
[Test 4]: goEditing
--------------------------------------------------------------------------------
[Test 4.1]: testGoEditing1 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	goEditing(L)
Oracle : 
	isEditing(L) == true
	FORALL (x,y) / nature(L,x,y) = nature(L,x,y)@pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 4.2]: testGoEditing2 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	goEditing(L)
	goEditing(L)
Oracle : 	
	Exception {
		goEditing : isEditing() != false
	}
--------------------------------------------------------------------------------
[Test 5]: remove
--------------------------------------------------------------------------------
[Test 5.1]: testRemove1 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,1,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)

	remove(L,1,55)
Oracle : 
	nature(L,1,55) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.2]: testRemove2 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,98,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)

	remove(L,98,55)
Oracle : 
	nature(L,98,55) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.3]: testRemove3 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)

	remove(L,46,55)
Oracle : 
	nature(L,46,55) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.4]: testRemove4 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,1,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)

	remove(L,46,1)
Oracle : 
	nature(L,46,1) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.5]: testRemove5 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,78,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,78)
Oracle : 
	nature(L,46,78) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.6]: testRemove6 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,46,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,46)
Oracle : 
	nature(L,46,46) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.7]: testRemove7 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,8,78,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,8,78)
Oracle : 
	nature(L,8,78) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.8]: testRemove8 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,11,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,11)
Oracle : 
	nature(L,46,11) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.9]: testRemove9 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,91,78,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,91,78)
Oracle : 
	nature(L,91,78) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.10]: testRemove10 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,77,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,77)
Oracle : 
	nature(L,46,77) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.11]: testRemove11 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,8,77,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,8,77)
Oracle : 
	nature(L,8,77) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.12]: testRemove12 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,91,11,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,91,11)
Oracle : 
	nature(L,91,11) = Nature.EMPTY
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 5.13]: testRemove13 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.METAL)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,55)
Oracle : 	
	Exception {
		remove : getNature(x,y) != Nature.DIRT 
	}
--------------------------------------------------------------------------------
[Test 5.14]: testRemove14 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goEditing()
	
	remove(L,46,55)
Oracle : 	
	Exception {
		remove : isEditing() == false 
	}
--------------------------------------------------------------------------------
[Test 5.15]: testRemove15 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,0,55)
Oracle : 	
	Exception {
		remove : x <= 0
	}
--------------------------------------------------------------------------------
[Test 5.16]: testRemove16 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,99,55)
Oracle : 	
	Exception {
		remove : x >= getWidth()-1
	}
--------------------------------------------------------------------------------
[Test 5.17]: testRemove17 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,0)
Oracle : 	
	Exception {
		remove : y <= 0
	}
--------------------------------------------------------------------------------
[Test 5.18]: testRemove18 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,46,79)
Oracle : 	
	Exception {
		remove : y >= getHeight()-1
	}
--------------------------------------------------------------------------------
[Test 5.19]: testRemove19 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,8,11)
Oracle : 	
	Exception {
		remove : x == getXEntrance() && y == getYEntrance()
	}
--------------------------------------------------------------------------------
[Test 5.20]: testRemove20 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	remove(L,91,76)
Oracle : 	
	Exception {
		remove : x == getXExit() && y == getYExit()
	}
--------------------------------------------------------------------------------
[Test 6]: build
--------------------------------------------------------------------------------
[Test 6.1]: testBuild1 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,1,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)

	build(L,1,55)
Oracle : 
	nature(L,1,55) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.2]: testBuild2 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,98,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)

	build(L,98,55)
Oracle : 
	nature(L,98,55) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.3]: testBuild3 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)

	build(L,46,55)
Oracle : 
	nature(L,46,55) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.4]: testBuild4 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,1,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)

	build(L,46,1)
Oracle : 
	nature(L,46,1) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.5]: testBuild5 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,78,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,78)
Oracle : 
	nature(L,46,78) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.6]: testBuild6 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,46,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,46)
Oracle : 
	nature(L,46,46) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.7]: testBuild7 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,78,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,8,78)
Oracle : 
	nature(L,8,78) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.8]: testBuild8 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,78,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,11)
Oracle : 
	nature(L,46,11) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.9]: testBuild9 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,78,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,91,78)
Oracle : 
	nature(L,91,78) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.10]: testBuild10 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,77,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,77)
Oracle : 
	nature(L,46,77) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.11]: testBuild11 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,46,77,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,8,77)
Oracle : 
	nature(L,8,77) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.12]: testBuild12 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 

	setNature(L,91,11,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,91,11)
Oracle : 
	nature(L,91,11) = Nature.DIRT
	isEditing(L) == isEditing(L)@Pre
	xEntrance(L) == xEntrance(L)@pre
	yEntrance(L) == yEntrance(L)@pre
	xExit(L) == xExit(L)@pre
	yExit(L) == yExit(L)@pre
--------------------------------------------------------------------------------
[Test 6.13]: testBuild13 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.DIRT)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,55)
Oracle : 	
	Exception {
		build : getNature(x,y) != Nature.EMPTY 
	}
--------------------------------------------------------------------------------
[Test 6.14]: testBuild14 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goEditing()
	
	build(L,46,55)
Oracle : 	
	Exception {
		build : isEditing() == false 
	}
--------------------------------------------------------------------------------
[Test 6.15]: testBuild15 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,0,55)
Oracle : 	
	Exception {
		build : x <= 0
	}
--------------------------------------------------------------------------------
[Test 6.16]: testBuild16 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,99,55)
Oracle : 	
	Exception {
		build : x >= getWidth()-1
	}
--------------------------------------------------------------------------------
[Test 6.17]: testBuild17 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,0)
Oracle : 	
	Exception {
		build : y <= 0
	}
--------------------------------------------------------------------------------
[Test 6.18]: testBuild18 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,46,79)
Oracle : 	
	Exception {
		remove : y >= getHeight()-1
	}
--------------------------------------------------------------------------------
[Test 6.19]: testBuild19 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,8,11)
Oracle : 	
	Exception {
		build : x == getXEntrance() && y == getYEntrance()
	}
--------------------------------------------------------------------------------
[Test 6.20]: testBuild20 | Negatif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(L,46,55,Nature.EMPTY)
	
	goPlay(L, 8, 11, 91, 76)
	
	build(L,91,77)
Oracle : 	
	Exception {
		build : x == getXExit() && y == getYExit()
	}
	