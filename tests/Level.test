--------------------------------------------------------------------------------
[Test 1]: Init
--------------------------------------------------------------------------------
[Test 1.1]: testInit1 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(5,10)
Oracle : 	
	height(L) == 10
	width(L) == 5
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L) == ( Nature.METAL FORALL (x,y) / 
				   (x=1 && 0<y<height()) || (y=1 && 0<x<width()) ||
				   (x=width() && 0<y<height()) || (y=height() && 0<x<width()) )
			 &&  ( Nature.EMPTY FORALL (x,y) / 
				   (x!=1 && 0<y<height()) || (y!=1 && 0<x<width()) || 
				   (x!=width() && 0<y<height()) || (y!=height() && 0<x<width()) )
--------------------------------------------------------------------------------
[Test 1.2]: testInit2 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(10,5)
Oracle : 	
	height(L) == 5
	width(L) == 10
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L) == ( Nature.METAL FORALL (x,y) / 
				   (x=1 && 0<y<height()) || (y=1 && 0<x<width()) ||
				   (x=width() && 0<y<height()) || (y=height() && 0<x<width()) )
			 &&  ( Nature.EMPTY FORALL (x,y) / 
				   (x!=1 && 0<y<height()) || (y!=1 && 0<x<width()) || 
				   (x!=width() && 0<y<height()) || (y!=height() && 0<x<width()) )
--------------------------------------------------------------------------------
[Test 1.3]: testInit3 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(999,999)
Oracle : 	
	height(L) == 999
	width(L) == 999
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L) == ( Nature.METAL FORALL (x,y) / 
				   (x=1 && 0<y<height()) || (y=1 && 0<x<width()) ||
				   (x=width() && 0<y<height()) || (y=height() && 0<x<width()) )
			 &&  ( Nature.EMPTY FORALL (x,y) / 
				   (x!=1 && 0<y<height()) || (y!=1 && 0<x<width()) || 
				   (x!=width() && 0<y<height()) || (y!=height() && 0<x<width()) )
--------------------------------------------------------------------------------
[Test 1.4]: testInit4 | Positif

Conditions initiales :
	aucunes
Opérations : 
	L = init(100,80)
Oracle : 	
	height(L) == 80
	width(L) == 100
	isEditing(L) == true
	xEntrance(L) == -1
	yEntrance(L) == -1
	xExit(L) == -1
	yExit(L) == -1
	nature(L) == ( Nature.METAL FORALL (x,y) / 
				   (x=1 && 0<y<height()) || (y=1 && 0<x<width()) ||
				   (x=width() && 0<y<height()) || (y=height() && 0<x<width()) )
			 &&  ( Nature.EMPTY FORALL (x,y) / 
				   (x!=1 && 0<y<height()) || (y!=1 && 0<x<width()) || 
				   (x!=width() && 0<y<height()) || (y!=height() && 0<x<width()) )
--------------------------------------------------------------------------------
[Test 1.5]: testInit5 | Negatif

Conditions initiales :
	aucunes
Opérations : 
	L = init(-5,80)
Oracle : 	
	Exception {
		Init : x <= 0
	}
--------------------------------------------------------------------------------
[Test 1.6]: testInit6 | Negatif

Conditions initiales :
	aucunes
Opérations : 
	L = init(20,0)
Oracle : 	
	Exception {
		Init : y <= 0
	}
--------------------------------------------------------------------------------
[Test 2]: setNature
--------------------------------------------------------------------------------
[Test 2.1]: testSetNature1 | Positif

Conditions initiales :
	L = init(100,80)
Opérations : 
	setNature(5, 5, Nature.DIRT);
Oracle : 
	nature(L) = Nature.DIRT
	isEditing(L) == isEditing(L)
	xEntrance(L) == xEntrance(L)
	yEntrance(L) == yEntrance(L)
	xExit(L) == xExit(L)
	yExit(L) == yExit(L)